/*
n个方格的涂色方案可由n-1个涂色方案得出，此时分为两种情况：
1、若n-1格处本来就为合法方格（n-1格与1格颜色不同），那么n格就只能填入除了n-1格和1格之外的剩下一种颜色，所以这种情况下f(n)=f(n-1)
2、若n-1格处本来就不是合法方格(n-1格与1格颜色相同)，但是如果n格填入合法颜色后整体又是合法的，所以还有这一种情况。这种情况下，n-1格与1格
   颜色相同，此时的颜色结构一定是“……n-2格(f(n-2))，与1格颜色相同的n-1格，与1格和n-1格颜色不同的n格” 所以此时n-1格没得选，只能和1格相同，
   所以在n-2格及之前的格子都填好的情况下n-1格只有一种选择，就是和1格相同。而n格要与1格和n-1格颜色不同，但1格与n-1格颜色又相同，所以n格在
   其他格子都已经填上的情况下有2种选择，所以总的方案数就是f(n)=f(n-2)* 1 * 2 = 2*f(n-2) 
   其中1表示n-1格的一种，2表示n格的2种
综上，f(n)=f(n-1)+2*f(n-2) 
*/


using namespace std;
#include<iostream>

int main()
{
	long long f[51];
	f[1]=3;
	f[2]=6;
	f[3]=6;
	for(int i=4;i<=50;i++)
	{
		f[i]=f[i-1]+2*f[i-2];
	}
	int n;
	while(cin>>n)
	{
		cout<<f[n]<<endl;
	}
	return 0;
}
